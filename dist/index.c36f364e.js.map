{"mappings":"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","sources":["index.js"],"sourcesContent":["\n/* HELPER FUNCTIONS */\n// TOO MANY FETCHES\n\n// If geolocation 'Blocked' or Failed\nconst getDefaultPosition = async function() { \n    let defaultPos = await fetch('./config.json', {cache:\"force-cache\"}).then((response) => response.json()).then((data) => data.defaultPosition)\n    return defaultPos\n}\n\n\nconst getApiKeys = async function() {\n    let apiKeys = await fetch('./config.json', {cache:\"force-cache\"}).then((response) => response.json()).then((data) => data.apiKeys)\n    return apiKeys\n}\n\n\nconst getIcons = async function() {\n    let {icons} = await fetch(\"./icons.json\", {cache:\"force-cache\"}).then(r => r.json());\n    return icons\n}\n\n\nconst getBG = async function() {\n    let {background:bgImgs} = await fetch(\"./icons.json\", {cache:\"force-cache\"}).then(r => r.json());\n    return bgImgs\n}\n\n\nfunction kelvinToCF(tempK){\n    let F = 1.8*(tempK-273.15) + 32;\n    let C = tempK - 273.15;\n    return {C: C.toFixed(2), F: F.toFixed(2)};\n}\n\n\nconst capitalize = function(str){\n    return str\n        .split(\" \").map(y => y[0].toUpperCase() + y.slice(1))\n        .join(\" \")\n}\n\n\n\nconst fetchWeatherData = async function(lat, long) {\n    let weatherApiKeys = await getApiKeys();\n    let url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${weatherApiKeys.apiKey_weatherApp}`\n    \n    // Parse weather and temperature\n    let {weather:weatherData, main:temperatureData, sys:country, name:city} = await fetch(url).then((resp) => resp.json())\n    let {main:weather, description} = weatherData[0];\n\n    // Convert temp from Kelvin to Celcius and Fahrenheit \n    let {temp: tempKelvin, temp_min:tempMinKelvin, temp_max:tempMaxKelvin, feels_like:feelsLikeKelvin} = temperatureData; \n    let [temp, tempMin, tempMax, feelsLike] = [kelvinToCF(tempKelvin), kelvinToCF(tempMinKelvin), kelvinToCF(tempMaxKelvin), kelvinToCF(feelsLikeKelvin)]    \n    console.log(\"Country:\", country.country, city)\n    return {\n        weather: weather, \n        desc: capitalize(description), \n        temperature: {\n            temp: temp,             // each temperature object - obj : {C: celsius, F: Fahrenheit}\n            tempMin: tempMin, \n            tempMax : tempMax,\n            feelsLike: feelsLike\n        },\n        location: {        \n            country: country.country || '', \n            city: city || ''\n        }\n    }\n}\n\n\n\nconst renderDOM = async function(weatherData){\n    console.log(weatherData)\n\n    let weather = weatherData.weather.toLowerCase();\n    let tempData = weatherData.temperature;\n    let description = weatherData.desc;\n    let location = weatherData.location;\n    let icons = await getIcons();\n    let bgImgs = await getBG();\n    \n    // set images    \n    document.querySelector('#icon-img').src = icons[weather];\n    if(bgImgs[weather]) {\n            document.body.style.backgroundImage = `url(${bgImgs[weather]})`\n            document.body.style.backgroundRepeat = \"no-repeat\"\n        } else {\n        document.body.style.backgroundImage = ``;\n        document.body.style.backgroundColor = 'black';\n        console.log(\"smoke?\")\n    }\n    // set temperature\n    document.querySelector('#C').textContent = tempData.temp.C;\n    document.querySelector('#F').textContent = tempData.temp.F;\n\n    // render the main weather block\n    mainClass = document.querySelector(\".main\").classList.remove(\"mainClass\")\n    searchInputClass = document.querySelector(\".search\").classList.remove(\"searchBeforeBegin\")\n\n    // set opacity for transition\n    document.querySelector(\".main\").style.opacity = 1;\n\n    // set description and location\n    document.querySelector('#description').textContent = description;\n    document.querySelector('#location').textContent = `${location.country}, ${location.city}`;\n}\n\n\n\nconst geoCoding = async function(searchAddress) {\n    let {geoCodingApi} = await getApiKeys();\n    let url = `http://api.positionstack.com/v1/forward?access_key=${geoCodingApi}&query=${searchAddress}`\n    let {data} = await fetch(url).then(r => r.json());\n    let {latitude:lat, longitude:long} = data[0]\n    return {lat: lat, long: long}\n}  \n\n\n\nconst handler = async function (response) {\n    let weatherData;\n    console.log(response)\n    try {\n        if (response instanceof GeolocationPositionError) {\n            throw new Error(\"Could not get position data. Displaying 'Exton,PA' weather\")\n        }\n\n        if (!(response instanceof GeolocationPosition)) {           // Input Address in search bar\n            let searchAddress = response;\n            const {lat, long} = await geoCoding(searchAddress);  \n            weatherData = await fetchWeatherData(lat, long);\n            console.log(lat, long);\n        } else {\n            let locationData = response;                            // If getCurrentPosition is successful,                                          \n            const lat = locationData.coords.latitude;               // response is location data object\n            const long = locationData.coords.longitude;\n            weatherData = await fetchWeatherData(lat, long)\n            console.log(\"Current:\", lat, long)\n        }\n\n    } catch (err) {\n        let {lat:defaultLat, long:defaultLong} = await getDefaultPosition();     // Probably make only search bar visible (until you enter address)\n        weatherData = await fetchWeatherData(defaultLat, defaultLong);\n    \n    } finally {\n        renderDOM(weatherData);\n    }\n}\n\n\n\nconst searchTimerHandle = function () {\n    var timer = '';\n    return function (inputEvent) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n                        console.log(inputEvent.target.value); \n                        handler(inputEvent.target.value);   \n                }, 500);\n    }\n}\n\n\n\nconst runApp = function() {\n        if (window.navigator.geolocation) {\n            window.navigator.geolocation.getCurrentPosition(handler, handler);\n        }\n        let handle = searchTimerHandle();\n        document.querySelector(\"#search-string\").addEventListener('input', handle);\n    \n}   \n\n\n\nrunApp();\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}